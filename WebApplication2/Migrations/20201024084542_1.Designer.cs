// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(WebApplication2Context))]
    [Migration("20201024084542_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebDBLybrary.Models.Book", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BkAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BkRealiseDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GenreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PublisherID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Employee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmpAge")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpPassportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpSex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PosID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("PosID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Genre", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Position", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PosDuties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PosSalary")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Publisher", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PubAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PubCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PubName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Reader", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RdAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RdBdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RdFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RdPassportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RdPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RdSex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Reader");
                });

            modelBuilder.Entity("WebDBLybrary.Models.ReturnedBook", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BkId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RbGiveOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RbReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RbReturnFlag")
                        .HasColumnType("bit");

                    b.Property<long>("RdId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BkId");

                    b.HasIndex("EmpId");

                    b.HasIndex("RdId");

                    b.ToTable("ReturnedBook");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Book", b =>
                {
                    b.HasOne("WebDBLybrary.Models.Genre", "Gen")
                        .WithMany("Books")
                        .HasForeignKey("GenreId");

                    b.HasOne("WebDBLybrary.Models.Publisher", "Pub")
                        .WithMany("Books")
                        .HasForeignKey("PublisherID");
                });

            modelBuilder.Entity("WebDBLybrary.Models.Employee", b =>
                {
                    b.HasOne("WebDBLybrary.Models.Position", "Pos")
                        .WithMany("Employees")
                        .HasForeignKey("PosID");
                });

            modelBuilder.Entity("WebDBLybrary.Models.ReturnedBook", b =>
                {
                    b.HasOne("WebDBLybrary.Models.Book", "Bk")
                        .WithMany("ReturnedBooks")
                        .HasForeignKey("BkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDBLybrary.Models.Employee", "Emp")
                        .WithMany("ReturnedBooks")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDBLybrary.Models.Reader", "Rd")
                        .WithMany("ReturnedBooks")
                        .HasForeignKey("RdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
